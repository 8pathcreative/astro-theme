---
export interface FeaturedResourceProps {
  resource: {
    slug: string;
    name: string;
    description: string;
    image_url?: string;
    categories?: {
      name: string;
      slug: string;
    };
  };
}

const { resource } = Astro.props;
---

<div class="bg-gradient-to-r from-purple-600 to-indigo-700 rounded-xl overflow-hidden shadow-xl">
  <div class="md:flex">
    <div class="md:w-1/2 p-8 md:p-12 flex flex-col justify-center">
      {resource.categories && (
        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white/20 text-white mb-4 w-fit">
          {resource.categories.name}
        </span>
      )}
      <h3 class="text-2xl md:text-3xl font-bold text-white mb-4">{resource.name}</h3>
      <p class="text-purple-100 mb-6">{resource.description}</p>
      <a 
        href={`/resources/${resource.slug}`} 
        class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-white hover:bg-gray-100 w-fit"
      >
        View Resource
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 ml-2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
        </svg>
      </a>
    </div>
    <div class="md:w-1/2 bg-gray-200 dark:bg-gray-700">
      <img 
        src={resource.image_url || '/placeholder.svg?height=400&width=600'} 
        alt={resource.name}
        class="w-full h-full object-cover"
      />
    </div>
  </div>
</div>

